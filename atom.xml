<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nineteen Nights</title>
  
  <subtitle>subtitle</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fiftywu.github.io/"/>
  <updated>2020-03-30T01:42:01.823Z</updated>
  <id>https://fiftywu.github.io/</id>
  
  <author>
    <name>wulin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>For My Swallow Sister</title>
    <link href="https://fiftywu.github.io/2020/02/12/page/"/>
    <id>https://fiftywu.github.io/2020/02/12/page/</id>
    <published>2020-02-12T14:40:00.000Z</published>
    <updated>2020-03-30T01:42:01.823Z</updated>
    
    <content type="html"><![CDATA[<p>Hi, my sweet~</p><p>Do you feel that I miss you so much ?</p><p>Lin</p><p>2020.2.12</p><p>——</p><p><font size="5">诗歌 by 白落梅 </font></p><p>也许有过去</p><p>也许只有</p><p>在回忆里才能再见你</p><p>红尘如泥</p><p>而我在最深的红尘里</p><p>与你相遇</p><p>又在风轻云淡的光阴下</p><p>匆匆别离</p><p>也许我还是我</p><p>也许你还是你</p><p>也许有一天</p><p>在乱世的红尘里</p><p>还可以闻到彼此的呼吸</p><p>那时候</p><p>我答应你</p><p>在最烟火的人间沉迷</p><p>并且</p><p>再也不轻易说分离 </p><p>——《在最深的红尘里重逢:仓央嘉措诗传》</p>]]></content>
    
    <summary type="html">
    
      Miss you
    
    </summary>
    
    
      <category term="随笔" scheme="https://fiftywu.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔20191113</title>
    <link href="https://fiftywu.github.io/2019/11/13/%E9%9A%8F%E7%AC%9420191113/"/>
    <id>https://fiftywu.github.io/2019/11/13/随笔20191113/</id>
    <published>2019-11-13T07:00:00.000Z</published>
    <updated>2020-02-12T14:46:54.380Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/pic2.jpg" class="class-names" width="800" height="450" title="测试"><center><font size="5">随笔20191113</font></center>  <!-- &emsp;&emsp;十月，渐进深秋，大抵联想到的都是一些肃杀之意象，以前我们说“孤独的石头坐满天空”，“或泪水总是在转身之后”，现在我们也不再说。也许只需要在伸手不见五指的文昌操场散散步，在某个没有姓名的石阶上坐下，数一数通讯录里的人，不类晏殊的“昔日共我赏花人，如今点检无一半”，实际上自己也不赏花，更不必说共我赏花之者了。 --><p>&emsp;&emsp;最近，也就是从今年11月初起，落叶翻飞，秋风萧瑟，以至于众生万象神色紧张，我也不能例外。这和本科大三初期的感觉如出一辙，只是当时考虑的问题比较浅也比较近，无非是除了数模国奖、top10%的GPA以及若干荣誉称号外别无长物。但直至推免时段，才觉整个环境之浮躁，非我一人如此。那时感觉，这个年纪的学生，自然不乏有做工扎实也全知全能的大神，但更多依旧是平凡的人，至于最后谁飞黄腾达，谁落地开花，谁悄寂萎谢，乃是诸多因素糅杂之结果。</p><p>&emsp;&emsp;故而，在本科第四年时，在几个中流985中选择一个靠近家乡的学校继续读研后，便不再思索此事。第四年尝试因缘际会般的旅游，尝试撰写学术论文，尝试参加学术会议，尝试公司实习等等。自我感觉那一年也不能称其为颓废，每天早上七点多起床，在路边随便买个包子或酱香饼，然后匆忙赶到街道口乘近半个小时的地铁到金融港，再步行十来分钟至B24栋，六点晚饭后，开始工作于自己的毕业设计，在公司蹭着高配主机及双屏显示器至九十点。周末又要更早起床赶到驾校，更有短期速成能否一把通过的忧虑（这里感谢潘、陶两位教练）。好在彼时还有一票赏心悦事，能使我在短暂的歇息中寻得快慰，如重庆小吃的诸葛烤鱼、与友人至凌波门外或华师夜幕等等。</p><p>&emsp;&emsp;时至今日，依然对本科的岁月历历在目，难以忘怀。依然对最后有些重要的朋友没有珍重告别而羞愧不已。依然对有一些壮丽山河或闲庭雅苑没有涉足而抱憾至深。依然对许许多多难能重复的情愫没有记录而感到“泥上偶然留指爪，鸿飞那复计东西”。</p><p>&emsp;&emsp;当然，认识社会面向现实是十足正确的，斜杠青年倒也和现实主义也不存在矛盾冲突。只是，很大程度上，当一个人见识了更大的世界后，他的内在就发生了变化。正如一位朋友之前推荐的《海蒂和爷爷》，其中海蒂从一个在山上牧羊的自然之子，经历了与克拉拉在一起的贵族生活后，她见到了社会更大的多样性以及人生的可能性。此后，她再回到乡村，教师问他们的梦想时，在“铁匠”、“牧羊”、“农民”等词语的闪烁中，海蒂说“我想写故事”。此时的海蒂，尽管她的本质仍然是个自然之子，可是她已不再觉得彼得所谓“牧羊人不需认字”的言论是正确，她有了自己的情感表达的诉求及其他。</p><p>&emsp;&emsp;是的，本科的时候井底之蛙，觉得天空不过就是眼中的模样，世界如此，宇宙如此。因而觉得，尽管我不是最优秀的那只青蛙（优秀的青蛙也许比我身材高大，目光犀利些），那主要是由于我之中庸，不愿罢了（否则我尽可以踩在石头上或者戴个隐形眼镜）。因为我本质上内心底是认同“性格决定命运”的言论的（不然我也许也能说出摘下星星送给你之类的）。事实上，我只能写写“那明月划过窗台，是我对你一生的挚爱”，却并不敢命令月总是明亮皓洁，且每天按时划上你的窗台，尤其现在夜晚雾霾沉重。</p><p>&emsp;&emsp;前些日子脑海里总是岳飞的“何日请缨提锐旅，一鞭直渡清河洛。却归来、再续汉阳游，骑黄鹤”。而近来总是预期为负，不能坚定。再看看缤纷多彩的时代，常感到自己的异常平凡。尽管有许多人皆是如此，但乐天而知命者却不列我于席。高中时，袁老师的“行胜于言”常悬系心上，但后来又往往惶惑于“选择比努力更重要”，一时竟不能自洽。</p><p>&emsp;&emsp;这种感觉也许常常存在，解决的方法或许也有，譬如“谁要是没有耐心，谁就没有智慧”云云。</p><!--也许自己应该做些什么，譬如脚踏实地，总不该学资本主义闹罢工吧。（到这里，特别感谢JY2，跨越一万公里的交流总令人感到WARM）--><p align="right">2019.11.13</p><p align="right">于南京云智控</p>]]></content>
    
    <summary type="html">
    
      Cause life is hard, I want some sweet.
    
    </summary>
    
      <category term="Emotion随笔" scheme="https://fiftywu.github.io/categories/Emotion%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://fiftywu.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>线性方程组迭代算法</title>
    <link href="https://fiftywu.github.io/2019/08/10/%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E8%BF%AD%E4%BB%A3%E7%AE%97%E6%B3%95/"/>
    <id>https://fiftywu.github.io/2019/08/10/线性方程组迭代算法/</id>
    <published>2019-08-10T02:50:45.000Z</published>
    <updated>2019-11-13T07:27:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;本页面使用iframe标签内嵌html，如果阅读不便请点击<a href="/htmls/iter_algo.html">链接</a></p><iframe width="100%" height="600" frameborder="0" src="/htmls/iter_algo.html"></iframe><!-- <iframe src="/htmls/iter_algo.html" width="800" height="800" frameborder="0" allowfullscreen></iframe> -->]]></content>
    
    <summary type="html">
    
      雅克比迭代法与高斯-赛德尔迭代法详解
    
    </summary>
    
    
      <category term="线性代数" scheme="https://fiftywu.github.io/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Numpy基本操作</title>
    <link href="https://fiftywu.github.io/2019/08/06/Numpy%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>https://fiftywu.github.io/2019/08/06/Numpy基本操作/</id>
    <published>2019-08-06T02:50:35.000Z</published>
    <updated>2019-11-13T07:26:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Numpy简介"><a href="#1-Numpy简介" class="headerlink" title="1 Numpy简介"></a>1 Numpy简介</h1><p>NumPy是Python中科学计算的基础软件包。<br>它是一个提供多了维数组对象，多种派生对象（如：掩码数组、矩阵）以及用于快速操作数组的函数及API；<br>它包括数学、逻辑、数组形状变换、排序、选择、I/O 、离散傅立叶变换、基本线性代数、基本统计运算、随机模拟等等。</p><h1 id="2-Numpy数组"><a href="#2-Numpy数组" class="headerlink" title="2 Numpy数组"></a>2 Numpy数组</h1><p>NumPy数组在创建时具有固定的大小， 更改ndarray的大小将创建一个新数组并删除原来的数组。<br>NumPy数组中的元素都需要具有相同的数据类型，因此在内存中的大小相同。<br>NumPy数组有助于对大量数据进行高级数学和其他类型的操作。 </p><h1 id="3-np基本操作"><a href="#3-np基本操作" class="headerlink" title="3 np基本操作"></a>3 np基本操作</h1><h2 id="3-1-np常用数据类型"><a href="#3-1-np常用数据类型" class="headerlink" title="3.1 np常用数据类型"></a>3.1 np常用数据类型</h2><p>int 8/16/32/64<br>float 16/32/64<br>complex64/128 （64指实部虚部皆32位浮点数）<br>object（该类型与MATLAB cell相似）</p><h2 id="3-2-np数组属性"><a href="#3-2-np数组属性" class="headerlink" title="3.2 np数组属性"></a>3.2 np数组属性</h2><p>ndim/ shape/ size/ dtype/ itemsize/ real/ imag</p><p>秩/n行m列/元素总个数/ 元素类型/ 元素大小（字节）/元素实部/ 元素虚部</p><h2 id="3-3-创建np数组"><a href="#3-3-创建np数组" class="headerlink" title="3.3 创建np数组"></a>3.3 创建np数组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 由列表和元组创建数组</span></span><br><span class="line">np.array(list/tuple,dtype)</span><br><span class="line"><span class="comment"># 指定始末和步长生成数组</span></span><br><span class="line">np.arange(min,max,step,dtype)</span><br><span class="line"><span class="comment"># 全空与全0/1数组</span></span><br><span class="line">np.empty(shape,dtype)</span><br><span class="line">np.zeros(shape,dtype)</span><br><span class="line">np.ones(shape,dtype)</span><br><span class="line"><span class="comment"># 随机数组</span></span><br><span class="line">np.random.rand(n) <span class="comment">#生成0,1之间的n个随机数</span></span><br><span class="line">np.random.randn(n)<span class="comment">#生成0,1之间的n个随机数,服从正态分布</span></span><br><span class="line">np.random.randint(low, high, size) <span class="comment">#返回随机的整数</span></span><br><span class="line">np.random.random_integers(low, high, size) <span class="comment">#返回随机的整数</span></span><br><span class="line">np.random.shuffle(a) <span class="comment">#类似洗牌，打乱顺序，a变了</span></span><br><span class="line">np.random.permutation(a) <span class="comment">#打乱顺序,返回一个随机排列,a不变</span></span><br></pre></td></tr></table></figure><h2 id="3-4-np切片与索引"><a href="#3-4-np切片与索引" class="headerlink" title="3.4 np切片与索引"></a>3.4 np切片与索引</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个元素</span></span><br><span class="line">a[i,j]</span><br><span class="line"><span class="comment"># 指定始末和步长</span></span><br><span class="line">a[i:j] a[i:j:step]</span><br><span class="line"><span class="comment"># 指定某行某列</span></span><br><span class="line">a[i,:]/a[:,j]</span><br><span class="line"><span class="comment"># 从第i+1个元素至末尾</span></span><br><span class="line">a[i:]</span><br><span class="line"><span class="comment"># 数组索引[i1,j1],...</span></span><br><span class="line">a[[i1,i2,...],[j1,j2,...]]</span><br><span class="line"><span class="comment"># 布尔索引</span></span><br><span class="line">a[T/F]</span><br></pre></td></tr></table></figure><h2 id="3-5-np数组操作"><a href="#3-5-np数组操作" class="headerlink" title="3.5 np数组操作"></a>3.5 np数组操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改形状</span></span><br><span class="line">np.reshape(a,[m,n])</span><br><span class="line"><span class="comment"># 转置</span></span><br><span class="line">np.transpose(a)/ a.T</span><br><span class="line"><span class="comment"># 拼接</span></span><br><span class="line">np.concatenate((a1,a2,...),axis=<span class="number">0</span>/<span class="number">1</span>) <span class="comment">#axis控制纵横</span></span><br><span class="line">np.hstack((a1,a2,...)) <span class="comment">#左右</span></span><br><span class="line">np.vstack((a1,a2,...)) <span class="comment">#上下</span></span><br><span class="line"><span class="comment"># 修剪:x&gt;max-&gt;max,x&lt;min-&gt;min,中间元素不变</span></span><br><span class="line">np.clip(a,min,max)</span><br><span class="line"><span class="comment"># 分块</span></span><br><span class="line">np.split(a,num,axis=<span class="number">0</span>/<span class="number">1</span>) <span class="comment">#均匀分块：num分割块数，axis控制横纵</span></span><br><span class="line">np.array_split(a,num,axis=<span class="number">0</span>/<span class="number">1</span>) <span class="comment">#支持非均匀分块</span></span><br><span class="line"><span class="comment"># 排序:axis列行，kind排序方法，快排/归并/堆排</span></span><br><span class="line">np.sort(a,axis=<span class="number">0</span>/<span class="number">1</span>,kind)</span><br><span class="line">np.argsort(a) <span class="comment">#返回的是数组值从小到大的索引值。</span></span><br></pre></td></tr></table></figure><h2 id="3-6-np统计-算术函数"><a href="#3-6-np统计-算术函数" class="headerlink" title="3.6 np统计/算术函数"></a>3.6 np统计/算术函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计函数</span></span><br><span class="line">np.amax/amin/median/mean/var/ptp(<span class="function"><span class="keyword">def</span>:</span>max-min)</span><br><span class="line"><span class="comment"># 三角函数</span></span><br><span class="line">np.sin/cos/tan/arcsin/arccos/arctan</span><br><span class="line">np.degree <span class="comment">#弧度-&gt;角度</span></span><br><span class="line"><span class="comment"># 取整 decimals舍入的小数位数</span></span><br><span class="line">np.around(a,decimals)/floor/ceil</span><br></pre></td></tr></table></figure><h2 id="3-7-np线性代数"><a href="#3-7-np线性代数" class="headerlink" title="3.7 np线性代数"></a>3.7 np线性代数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 矩阵相乘</span></span><br><span class="line">np.dot(A,B) <span class="comment">#A*B是对应元素相乘，dot是矩阵相乘</span></span><br><span class="line"><span class="comment"># 点积</span></span><br><span class="line">np.vdot(A,B) <span class="comment">#A*B所有元素之和</span></span><br><span class="line"><span class="comment"># 行列式</span></span><br><span class="line">np.linalg.det()</span><br><span class="line"><span class="comment"># 矩阵的逆</span></span><br><span class="line">np.linalg.inv()</span><br></pre></td></tr></table></figure><h2 id="3-8-np输入输出"><a href="#3-8-np输入输出" class="headerlink" title="3.8 np输入输出"></a>3.8 np输入输出</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存单个数组</span></span><br><span class="line">numpy.save(file, arr) <span class="comment">#后缀’.npy‘</span></span><br><span class="line"><span class="comment"># 保存多个数组(args: 要保存的数组;kwds: 要保存的数组使用关键字名称)</span></span><br><span class="line">numpy.savez(file, *args, **kwds)</span><br><span class="line"><span class="comment"># 加载</span></span><br><span class="line">np.load(file)</span><br><span class="line"><span class="comment"># 以文本形式保存或加载</span></span><br><span class="line">np.loadtxt(FILENAME, dtype=int, delimiter=<span class="string">' '</span>)</span><br><span class="line">np.savetxt(FILENAME, a, fmt=<span class="string">"%d"</span>, delimiter=<span class="string">","</span>)</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.numpy.org.cn/" target="_blank" rel="noopener"><strong>Numpy 中文文档</strong></a><br><a href="https://www.bilibili.com/video/av9056628/" target="_blank" rel="noopener"><strong>莫烦Numpy&amp;pandas讲解</strong></a><br><a href="https://www.runoob.com/numpy/numpy-tutorial.html" target="_blank" rel="noopener"><strong>菜鸟教程</strong></a></p>]]></content>
    
    <summary type="html">
    
      NumPy是Python中科学计算的基础软件包……
    
    </summary>
    
      <category term="Python基础" scheme="https://fiftywu.github.io/categories/Python%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Numpy" scheme="https://fiftywu.github.io/tags/Numpy/"/>
    
  </entry>
  
  <entry>
    <title>随笔20170329</title>
    <link href="https://fiftywu.github.io/2017/03/29/%E9%9A%8F%E7%AC%9420170329/"/>
    <id>https://fiftywu.github.io/2017/03/29/随笔20170329/</id>
    <published>2017-03-29T02:50:35.000Z</published>
    <updated>2020-02-12T14:37:57.147Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/pic2.jpg" class="class-names" width="800" height="450" title="测试"><center><font size="5">随笔20170329</font></center>  <p>&emsp;&emsp;夜，十一点。寝室的灯，骤然熄灭。窗外，珞狮路，车水马龙。</p><p>&emsp;&emsp;雨水停了有两天了，结束了倒春寒的秋衣秋裤，进入不知穿什么是好的窘境——最美天气提醒您，明日中雨转小雨。</p><p>&emsp;&emsp;天气总是在不断的变化，阴晴之间，此消彼长，仔细想想，其实世界万物都是这样。事物往往发展到它的顶点，便要衰颓。 </p><p>&emsp;&emsp;前些日子，那时候天气还不算太坏，虽有些冷气，但也不误了赏花。那时候武大是一个炙手可热的地方，俨然成为一个风景名胜，尽管它本来就山灵水秀。我们西院大门边。也有一排樱花树，对我来说，那是一条每天都要走上数回的路，一点特色也没有，无论那里种的是樱花还是梅花，甚至鸡冠花我都提不起一点感念。也许是畏惧了武大的人潮，有许多游人也会来此处欣赏樱花之美。  </p><p>&emsp;&emsp;其实，若要深究，她们欣赏樱花的目的也不纯粹，无非是借着樱花的清新淡雅，给自己留下几张清新淡雅的照片。或轻捻花枝，或花下亭亭玉立。有些老奶奶也来此地留影，她们带上墨镜，摆好手势，面带微笑，亦显得很有朝气。  </p><p>&emsp;&emsp;虽然，我对这些全然不感兴趣。只是，似乎在这里，也可以发现一种二元对立，年轻的，年老的，但她们又有联系，就是对于时光的珍视。而时光总是给人无限的怀想和感慨。  </p><p>&emsp;&emsp;在万物复苏的春天，我似乎还只活在自己的小世界。以前，在一个读书交流会上，认识一位编辑老师，后来向他发了自己写的几篇拙劣的小文章，过了一段时间，他给我回信说，你的文章有一定的人文关怀，但没有打开，试着更为舒展地写作。我至今仍是无法摆脱，因为在我的观念里，文字的力量在于记叙，这记叙不需普世，我的力量何其渺小，便只谈在我身边，与我有关。  </p><p>&emsp;&emsp;那些远在天边发生着的，就让他发生去吧，它在别人的身边繁衍生息，造就一些不同寻常的故事，那是组成另一些人生命印记的碎片，理应由他们自己记录。 </p><p align="right">2017.3.29</p><p align="right">于WHUT西院</p>]]></content>
    
    <summary type="html">
    
      夜，十一点。寝室的灯，骤然熄灭。窗外，珞狮路，车水马龙。
    
    </summary>
    
      <category term="Emotion随笔" scheme="https://fiftywu.github.io/categories/Emotion%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://fiftywu.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
